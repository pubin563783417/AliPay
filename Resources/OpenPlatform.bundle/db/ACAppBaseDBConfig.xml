<module name="ACAppBase" initializer="createTable" tableName="ACAppBase_table" version="1.0">
    
    <const table_columns="(appId, version, pkgUrl, pkgSize, pkgType, h5AppCdnBaseUrl, incrementPkgUrl, status, autoStatus, alipayApp, thirdPkgName, needAuthorize, autoAuthorize, md5, pageUrl, appSource, options, locale, extra, schemeUri, name, slogan, desc, iconUrl, recommend, display, recommendStatus, downloadScene, tinyApp, updateFrequency)"/>
    <const table_values="%{'#{m.*}', appId, version, pkgUrl, pkgSize, pkgType, h5AppCdnBaseUrl, incrementPkgUrl, status, autoStatus, alipayApp, thirdPkgName, needAuthorize, autoAuthorize, md5, pageUrl, appSource, options, locale, extra, schemeUri, name, slogan, desc, iconUrl, recommend, display, recommendStatus, downloadScene, tinyApp, updateFrequency}"/>
    <const table_update="update ${T} set %{'* = #{m.*}', appId, version, pkgUrl, pkgSize, pkgType, h5AppCdnBaseUrl, incrementPkgUrl, status, autoStatus, alipayApp, thirdPkgName, needAuthorize, autoAuthorize, md5, pageUrl, appSource, options, locale, extra, schemeUri, name, slogan, desc, iconUrl, recommend, display, recommendStatus, downloadScene, tinyApp, updateFrequency}"/>
    
    <update id="createTable">
        create table if not exists ${T} (appId text primary key, version text, pkgUrl text, pkgSize integer, pkgType text, h5AppCdnBaseUrl text, incrementPkgUrl text, status text, autoStatus integer, alipayApp integer, thirdPkgName text, needAuthorize integer, autoAuthorize integer, md5 text, pageUrl text, appSource text, options blob, locale text, extra blob, schemeUri text, name text, slogan text, desc text, iconUrl text, recommend integer, display integer, recommendStatus integer, downloadScene text, tinyApp integer, updateFrequency integer)

    </update>
    
    <insert id="saveAppBase" arguments="m">
        insert or replace into ${T} ${table_columns} values(${table_values})
    </insert>
    
    <insert id="saveAppBaseList" arguments="list" foreach="list.m">
        insert or replace into ${T} ${table_columns} values(${table_values})
    </insert>
    
    <select id="queryBaseInfo" arguments="appId" result="ACAppBase">
        select * from ${T} where appId = #{appId}
    </select>
    
    <select id="queryBaseInfoList" arguments="appIdList" foreach="appIdList.appId" result="[ACAppBase]">
        select * from ${T} where appId = #{appId}
    </select>
    
    <select id="getAllAppBaseInfos" result="[ACAppBase]">
        select * from ${T}
    </select>

</module>
